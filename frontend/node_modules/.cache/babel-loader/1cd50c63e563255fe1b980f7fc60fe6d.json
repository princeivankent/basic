{"remainingRequest":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\wamp64\\www\\basic\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\basic\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\basic\\frontend\\src\\services\\api.service.js","dependencies":[{"path":"C:\\wamp64\\www\\basic\\frontend\\src\\services\\api.service.js","mtime":1556595081749},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\wamp64\\\\www\\\\basic\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport { TokenService } from './storage.service';\nimport { store } from '@/store/index';\nvar ApiService = {\n  _401interceptor: null,\n  init: function init(baseURL) {\n    axios.defaults.baseURL = baseURL;\n    this.mount401Interceptor();\n  },\n  setHeader: function setHeader() {\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(TokenService.getToken());\n  },\n  removeHeader: function removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n  get: function get(resource) {\n    return axios.get(resource);\n  },\n  post: function post(resource, data) {\n    return axios.post(resource, data);\n  },\n  put: function put(resource, data) {\n    return axios.put(resource, data);\n  },\n  delete: function _delete(resource) {\n    return axios.delete(resource);\n  },\n\n  /**\r\n    * Perform a custom Axios request.\r\n    *\r\n    * data is an object containing the following properties:\r\n    *  - method\r\n    *  - url\r\n    *  - data ... request payload\r\n    *  - auth (optional)\r\n    *    - username\r\n    *    - password\r\n  **/\n  customRequest: function customRequest(data) {\n    return axios(data);\n  },\n  mount401Interceptor: function mount401Interceptor() {\n    var _this = this;\n\n    this._401interceptor = axios.interceptors.response.use(function (response) {\n      return response;\n    },\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(error) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(error.request.status == 401)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!error.config.url.includes('/o/token/')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                // Refresh token has failed. Logout the user\n                store.dispatch('login/logout');\n                throw error;\n\n              case 6:\n                _context.prev = 6;\n                console.warn('Your token has been refreshed');\n                _context.next = 10;\n                return store.dispatch('login/refreshToken');\n\n              case 10:\n                return _context.abrupt(\"return\", _this.customRequest({\n                  method: error.config.method,\n                  url: error.config.url,\n                  data: error.config.data\n                }));\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                throw error;\n\n              case 16:\n                throw error;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  },\n  unmount401Interceptor: function unmount401Interceptor() {\n    // Eject the interceptor\n    axios.interceptors.response.eject(this._401interceptor);\n  }\n};\nexport default ApiService;",{"version":3,"sources":["C:\\wamp64\\www\\basic\\frontend\\src\\services\\api.service.js"],"names":["axios","TokenService","store","ApiService","_401interceptor","init","baseURL","defaults","mount401Interceptor","setHeader","headers","common","getToken","removeHeader","get","resource","post","data","put","delete","customRequest","interceptors","response","use","error","request","status","config","url","includes","dispatch","console","warn","method","unmount401Interceptor","eject"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { TokenService } from './storage.service'\r\nimport {store} from '@/store/index'\r\n\r\nconst ApiService = {\r\n\r\n  _401interceptor: null,\r\n\r\n  init(baseURL) {\r\n    axios.defaults.baseURL = baseURL\r\n    this.mount401Interceptor()\r\n  },\r\n\r\n  setHeader() {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${TokenService.getToken()}`\r\n  },\r\n\r\n  removeHeader() {\r\n    axios.defaults.headers.common = {}\r\n  },\r\n\r\n  get(resource) {\r\n    return axios.get(resource)\r\n  },\r\n\r\n  post(resource, data) {\r\n    return axios.post(resource, data)\r\n  },\r\n\r\n  put(resource, data) {\r\n    return axios.put(resource, data)\r\n  },\r\n\r\n  delete(resource) {\r\n    return axios.delete(resource)\r\n  },\r\n\r\n  /**\r\n    * Perform a custom Axios request.\r\n    *\r\n    * data is an object containing the following properties:\r\n    *  - method\r\n    *  - url\r\n    *  - data ... request payload\r\n    *  - auth (optional)\r\n    *    - username\r\n    *    - password\r\n  **/\r\n  customRequest(data) {\r\n    return axios(data)\r\n  },\r\n\r\n  mount401Interceptor() {\r\n    this._401interceptor = axios.interceptors.response.use(\r\n      (response) => {\r\n        return response\r\n      },\r\n      async (error) => {\r\n        if (error.request.status == 401) {\r\n          if (error.config.url.includes('/o/token/')) {\r\n            // Refresh token has failed. Logout the user\r\n            store.dispatch('login/logout')\r\n            throw error\r\n          } \r\n          else {\r\n            // Refresh the access token\r\n            try{\r\n              console.warn('Your token has been refreshed');\r\n              await store.dispatch('login/refreshToken')\r\n              // Retry the original request\r\n              return this.customRequest({\r\n                method: error.config.method,\r\n                url: error.config.url,\r\n                data: error.config.data\r\n              })\r\n            } \r\n            catch (e) {\r\n              // Refresh has failed - reject the original request\r\n              throw error\r\n            }\r\n          }\r\n        }\r\n\r\n        // If error was not 401 just reject as is\r\n        throw error\r\n      }\r\n    )\r\n  },\r\n\r\n  unmount401Interceptor () {\r\n    // Eject the interceptor\r\n    axios.interceptors.response.eject(this._401interceptor)\r\n  }\r\n}\r\n\r\nexport default ApiService\r\n"]}]}