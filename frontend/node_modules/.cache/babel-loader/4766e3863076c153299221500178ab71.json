{"remainingRequest":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\basic\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\wamp64\\www\\basic\\frontend\\src\\store\\modules\\todos.js","dependencies":[{"path":"C:\\wamp64\\www\\basic\\frontend\\src\\store\\modules\\todos.js","mtime":1555832952000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\basic\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\wamp64\\\\www\\\\basic\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { TodoService } from '../../services/todos.service';\nvar todos = {\n  namespaced: true,\n  state: {\n    todos: [],\n    todo: {},\n    form: {}\n  },\n  getters: {\n    getAllTodos: function getAllTodos(state) {\n      return state.todos;\n    } // getCompletedTodos (state) {\n    //   return state.todos.filter(item => item.is_completed)\n    // }, \n    // getPendingTodos (state) {\n    //   return state.todos.filter(item => !item.is_completed)\n    // }\n\n  },\n  mutations: {\n    FILL_TODOS: function FILL_TODOS(state, todos) {\n      state.todos = todos;\n    },\n    getTodo: function getTodo(state, todo) {\n      state.todo = todo;\n    },\n    REMOVE_TODO: function REMOVE_TODO(state, id) {\n      state.todos.splice(id, 1);\n    }\n  },\n  actions: {\n    fillTodos: function () {\n      var _fillTodos = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref) {\n        var commit, todos;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return TodoService.getTodos();\n\n              case 3:\n                todos = _context.sent;\n                commit('FILL_TODOS', todos.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fillTodos(_x) {\n        return _fillTodos.apply(this, arguments);\n      }\n\n      return fillTodos;\n    }(),\n    removeTodo: function removeTodo(_ref2, index) {\n      var commit = _ref2.commit;\n      commit('REMOVE_TODO', index);\n    }\n  }\n};\nexport default todos;",{"version":3,"sources":["C:\\wamp64\\www\\basic\\frontend\\src\\store\\modules\\todos.js"],"names":["TodoService","todos","namespaced","state","todo","form","getters","getAllTodos","mutations","FILL_TODOS","getTodo","REMOVE_TODO","id","splice","actions","fillTodos","commit","getTodos","data","removeTodo","index"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,8BAA1B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,IADA;AAEZC,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,EADF;AAELG,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAFK;AAOZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACMJ,KADN,EACa;AAClB,aAAOA,KAAK,CAACF,KAAb;AACD,KAHM,CAIP;AACA;AACA;AACA;AACA;AACA;;AATO,GAPG;AAkBZO,EAAAA,SAAS,EAAE;AACTC,IAAAA,UADS,sBACGN,KADH,EACUF,KADV,EACiB;AACxBE,MAAAA,KAAK,CAACF,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITS,IAAAA,OAJS,mBAIAP,KAJA,EAIOC,IAJP,EAIa;AACpBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD,KANQ;AAOTO,IAAAA,WAPS,uBAOIR,KAPJ,EAOWS,EAPX,EAOe;AACtBT,MAAAA,KAAK,CAACF,KAAN,CAAYY,MAAZ,CAAmBD,EAAnB,EAAsB,CAAtB;AACD;AATQ,GAlBC;AA6BZE,EAAAA,OAAO,EAAE;AACDC,IAAAA,SADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACWC,gBAAAA,MADX,QACWA,MADX;AAAA;AAAA,uBAEehB,WAAW,CAACiB,QAAZ,EAFf;;AAAA;AAEChB,gBAAAA,KAFD;AAGLe,gBAAAA,MAAM,CAAC,YAAD,EAAef,KAAK,CAACiB,IAArB,CAAN;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKPC,IAAAA,UALO,6BAKeC,KALf,EAKsB;AAAA,UAAhBJ,MAAgB,SAAhBA,MAAgB;AAC3BA,MAAAA,MAAM,CAAC,aAAD,EAAgBI,KAAhB,CAAN;AACD;AAPM;AA7BG,CAAd;AAwCA,eAAenB,KAAf","sourcesContent":["import {TodoService} from '../../services/todos.service'\r\n\r\nconst todos = {\r\n  namespaced: true,\r\n  state: {\r\n    todos: [],\r\n    todo: {},\r\n    form: {}\r\n  },\r\n  getters: {\r\n    getAllTodos (state) {\r\n      return state.todos\r\n    }\r\n    // getCompletedTodos (state) {\r\n    //   return state.todos.filter(item => item.is_completed)\r\n    // }, \r\n    // getPendingTodos (state) {\r\n    //   return state.todos.filter(item => !item.is_completed)\r\n    // }\r\n  },\r\n  mutations: {\r\n    FILL_TODOS (state, todos) {\r\n      state.todos = todos\r\n    },\r\n    getTodo (state, todo) {\r\n      state.todo = todo\r\n    },\r\n    REMOVE_TODO (state, id) {\r\n      state.todos.splice(id,1)\r\n    }\r\n  },\r\n  actions: {\r\n    async fillTodos ({commit}) {\r\n      const todos = await TodoService.getTodos()\r\n      commit('FILL_TODOS', todos.data)\r\n    },\r\n    removeTodo ({commit}, index) {\r\n      commit('REMOVE_TODO', index)\r\n    }\r\n  }\r\n}\r\n\r\nexport default todos"]}]}